stages:
  - staging-build
  - staging-test
  - staging-scan
  - staging-deploy
  - staging-clean
  - production-build
  - production-test
  - production-scan
  - production-deploy
  - production-clean

staging-build-job:
  stage: staging-build
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/product/ && sudo docker compose build --no-cache

staging-test-job:
  stage: staging-test
  allow_failure: false
  needs: [staging-build-job]
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - staging
  script:
    - sudo docker run -d --name product-test-php collectandverything-product:latest
    - sudo docker exec product-test-php /bin/bash -c 'phpcs --standard=PSR12 app/ > output.xml || true'
    - sudo docker exec product-test-php /bin/bash -c 'php artisan test || true'
    - sudo docker cp product-test-php:/var/www/output.xml phpcs-product.xml
  after_script:
    - sudo docker rm -f product-test-php
  artifacts:
    paths:
      - "*.xml"

staging-deploy-job:
  stage: staging-deploy
  allow_failure: false
  needs: [staging-test-job]
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - staging
  script:
    - cd /home/admin/docker.collect.verything/product/ && sudo docker compose up -d

staging-scan-job:
  stage: staging-scan
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  needs: [staging-build-job]
  tags:
    - staging
  script:
    - sudo trivy image --severity CRITICAL,HIGH collectandverything-product:latest

staging-clean-job:
  stage: staging-clean
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "staging"
  tags:
    - staging
  script:
    - sudo docker image prune --force

production-build-job:
  stage: production-build
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/product/ && sudo docker compose build --no-cache

production-test-job:
  stage: production-test
  allow_failure: false
  needs: [production-build-job]
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - sudo docker run -d --name product-test-php collectandverything-product:latest
    - sudo docker exec product-test-php /bin/bash -c 'phpcs --standard=PSR12 app/ > output.xml || true'
    - sudo docker exec product-test-php /bin/bash -c 'php artisan test'
    - sudo docker cp product-test-php:/var/www/output.xml phpcs-product.xml
  after_script:
    - sudo docker rm -f product-test-php
  artifacts:
    paths:
      - "*.xml"

production-scan-job:
  stage: production-scan
  needs: [production-build-job]
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - sudo trivy image --severity CRITICAL,HIGH collectandverything-product:latest

production-deploy-job:
  stage: production-deploy
  needs: [production-test-job]
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - cd /home/admin/docker.collect.verything/product/ && sudo docker compose up -d

production-clean-job:
  stage: production-clean
  allow_failure: false
  rules:
    - if: $CI_COMMIT_BRANCH == "production"
  tags:
    - production
  script:
    - sudo docker image prune --force
